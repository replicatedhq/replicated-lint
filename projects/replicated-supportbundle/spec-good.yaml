---
specs:

# get the ca cert from inside the container, by copying the file
 - docker.container-cp:
     src_path: /etc/pki/secrets/ca.crt
     container: "sgt-pki-manager"
     description: "The local CA Certificate"
     output_dir: /pki/ca-cert

# also grab the public key, capturing the stdout from `openssl`
 - docker.exec:
     container: "sgt-pki-manager"
     exec_config:
       Cmd: ["openssl", "x509", "-pubkey", "-noout", "-in", "/etc/pki/secrets/ca.crt"]
     description: "The RSA public Key of the X509 cert"
     output_dir: /pki/ca-pubkey
     timeout_seconds: 100


# do a docker inspect for all the containers we care about
 - docker.container-inspect:
     container_list_options:
       All: true
       Filters:
         com.superbigtool.onprem: true
     description: "The docker inspect for all the containers labeled with com.superbigtool.onprem"
     output_dir: /docker/inspect

# collect the docker logs for all the containers we care about
 - docker.logs:
     container_list_options:
       All: true
       Filters:
         com.superbigtool.onprem: true
     container_logs_options:
       Timestamps: true
     description: "The docker logs for all the containers labeled with com.superbigtool.onprem"
     output_dir: /docker/logs
     timeout_seconds: 100

# get the `docker ps` for containers we care about
 - docker.ps:
     All: true
     description: "The docker ps for all the containers labeled with com.superbigtool.onprem"
     output_dir: /docker/ps

# run a container with `--net host` to get info about the host network
 - docker.run:
     container_create_config:
       Config:
         Image: "debian:latest"
         Cmd: ["ip", "addr", "show"]
       HostConfig:
         NetworkMode: "host"
         AutoRemove: true
     description: "The `ip addr show` for the host network"
     output_dir: /docker/run/hostnet

# grab /proc/meminfo
 - os.read-file:
     filepath: /proc/meminfo
     description: "meminfo"
     output_dir: /os/proc/meminfo

# grab /proc/meminfo
 - os.read-file:
     filepath: /proc/cpuinfo
     description: "cpuinfo"
     output_dir: /os/proc/cpuinfo
     include_empty: true

 - docker.service-logs:
     service: "my_service"
     output_dir: /swarm/service-logs/myservice


lifecycle:
  - message:
      contents: generating bundle...
  - generate:
      use_defaults: true
  - upload:
      prompt:
        message: Do you want to upload directly?
        default: true
        accept: Thanks! Superbigtool will get back to you within 24 hours.
        decline: Send your support bundle located at {{.BundlePath}} to Superbigtool

